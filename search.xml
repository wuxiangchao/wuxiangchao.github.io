<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++ 泛型编程</title>
    <url>/2024/12/19/C-%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<p>这是一篇关于c++泛型编程的文章</p>
<span id="more"></span>
<p>Test</p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Rust 基本数据类型</title>
    <url>/2024/12/19/Rust-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>Rust 每个值都有确切的数据类型, 总的来说可以分为两类: 借本类型和复合类型。基本类型意味着它们往往是一个最小化原子类型，无法结构为其它类型。</p>
<span id="more"></span>
<p>一般来说Rust包含以下基本类型:</p>
<ul>
<li>数值类型: 有符号整数(<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>isize</code>)、无符号整数(<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>, <code>usize</code>)</li>
<li>字符串: 字符串字面量和字符串切片 <code>&amp;str</code></li>
<li>布尔类型: <code>true</code> 和 <code>false</code></li>
<li>字符类型: 表示单个Unicode字符，存储为四个字节</li>
<li>单元类型: 即<code>()</code>, 其唯一的值也是()</li>
</ul>
<h3 id="类型推导与标注"><a href="#类型推导与标注" class="headerlink" title="类型推导与标注"></a>类型推导与标注</h3><p>与Python、JavaScript等动态语言不同，Rust是一门静态类型语言，也就是编译器必须再编译期知道所有变量的类型，但这不意味着你需要为每个变量指定类型，因为<strong>Rust编译器可以根据变量值和上下文的使用方式来自动推导出变量的类型</strong>，但在某些情况下，它无法推导出变量类型，需要手动去给与一个类型标注。</p>
<p>$X=\int_{1}^{2}f(x)dx$</p>
]]></content>
      <tags>
        <tag>Rust</tag>
      </tags>
  </entry>
  <entry>
    <title>Rust 所有权机制</title>
    <url>/2024/12/19/Rust-%E6%89%80%E6%9C%89%E6%9D%83%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
